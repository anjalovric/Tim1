<Page x:Class="InitialProject.WPF.Views.GuideViews.AddTourByLanguageView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:tk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit.NET5" 
            xmlns:val="clr-namespace:InitialProject.WPF.Validations.GuideValidations" 
            xmlns:ns="clr-namespace:InitialProject"
      xmlns:local="clr-namespace:InitialProject.WPF.Views.GuideViews"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      mc:Ignorable="d" 
      d:DesignHeight="717" d:DesignWidth="1100"
      Title="{ns:Loc AddTourByLanguageView}">
    <Grid Style="{DynamicResource Background}">
        <Grid.RowDefinitions>
            <RowDefinition Height="1.8*"/>
            <RowDefinition Height="9.5*"/>
            <RowDefinition Height="0.5*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.5*"/>
            <ColumnDefinition Width="10*"/>
            <ColumnDefinition Width="0.5*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Style="{DynamicResource BackgroundHeader}">
            <!--TITLE-->
            <Label Content="{ns:Loc TourForm}" Style="{DynamicResource Header}"  Grid.Column="0" VerticalAlignment="Center" Width="461" HorizontalContentAlignment="Center"/>
            <Image Source="/Resources/Images/LOGO (2).jpg" Margin="0,0,905,0"/>
        </Grid>
        <Border Style="{DynamicResource Border}" Grid.Row="1" Grid.Column="1">
            <Grid  Style="{DynamicResource  InerInerGrid}" Grid.Row="1" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>

                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="2*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>


                <!--FORM-->
                <Grid  Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>


                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Row="0" Grid.Column="0" Margin="0,10,0,10"  Style="{DynamicResource  Label}" Content="{ns:Loc Name}"/>
                    <Label Grid.Row="1" Grid.Column="0" Margin="0,10,0,10"  Style="{DynamicResource  Label}" Content="{ns:Loc Capacity}"/>
                    <Label Grid.Row="2" Grid.Column="0" Margin="0,10,0,10"  Style="{DynamicResource  Label}" Content="{ns:Loc DurationInHours}"/>
                    <Label Grid.Row="4" Grid.Column="0" Margin="0,10,0,10"  Style="{DynamicResource  Label}" Content="{ns:Loc City}"/>
                    <Label Grid.Row="3" Grid.Column="0" Margin="0,12,0,8"  Style="{DynamicResource  Label}" Content="{ns:Loc Country}"/>
                    <Label Grid.Row="5" Grid.Column="0" Margin="0,44,0,25"  Style="{DynamicResource  Label}" Content="{ns:Loc Description}" Grid.RowSpan="2"/>
                    <Label Grid.Row="5" Grid.Column="0" Margin="0,10,0,10"  Style="{DynamicResource  Label}" Content="{ns:Loc Language}"/>


                    <TextBox x:Name="TourNameTB" Grid.Row="0" Grid.Column="1"  Margin="0,10,0,10" Style="{DynamicResource tb}">
                        <TextBox.Text>
                            <Binding Path="NameTU" UpdateSourceTrigger="PropertyChanged"  NotifyOnValidationError="True">
                                <Binding.ValidationRules>
                                    <val:StringTourNameValidationRule ValidatesOnTargetUpdated="True"  ValidationStep="RawProposedValue"></val:StringTourNameValidationRule>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>

                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                                    <TextBlock Grid.Column="0" Grid.Row="1" Text="{ns:Loc ThisFieldIsRequired}" Foreground="Red"/>
                                </Grid>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>


                    <tk:IntegerUpDown Style="{DynamicResource  i}" x:Name="MaxGuestsTB"  Grid.Row="1" Grid.Column="1"  Margin="0,10,0,10"  Minimum="1"  AllowTextInput="True">
                        <tk:IntegerUpDown.Text>
                            <Binding Path="MaxGuests" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                                <Binding.ValidationRules>
                                    <val:StringToIntegerValidationRule ValidatesOnTargetUpdated="True" ValidationStep="RawProposedValue"></val:StringToIntegerValidationRule>
                                </Binding.ValidationRules>
                            </Binding>
                        </tk:IntegerUpDown.Text>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>

                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                                    <TextBlock Grid.Column="0" Grid.Row="1" Text="{ns:Loc ThisFieldIsRequired}" Foreground="Red"/>
                                </Grid>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </tk:IntegerUpDown>

                    <tk:DoubleUpDown x:Name="DurationTB" Style="{DynamicResource d}"  Grid.Row="2" Grid.Column="1" Margin="0,10,0,10" Minimum="0.1" AllowTextInput="True" >
                        <tk:DoubleUpDown.Text>
                            <Binding Path="Duration" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                                <Binding.ValidationRules>
                                    <val:StringToDoubleValidation ValidatesOnTargetUpdated="True" ValidationStep="RawProposedValue"></val:StringToDoubleValidation>
                                </Binding.ValidationRules>
                            </Binding>
                        </tk:DoubleUpDown.Text>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>

                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                                    <TextBlock Grid.Column="0" Grid.Row="1" Text="{ns:Loc ThisFieldIsRequired}" Foreground="Red"/>
                                </Grid>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </tk:DoubleUpDown>


                    <ComboBox Style="{DynamicResource ComboBoxStyle}" x:Name="ComboBoxCity" ItemsSource="{Binding CitiesByCountry}"  IsTextSearchEnabled="True" IsTextSearchCaseSensitive="False" Grid.Row="4" Margin="191,10,0,10" IsEnabled="{Binding IsComboBoxCityEnabled}" Grid.ColumnSpan="2">
                        <ComboBox.SelectedItem>
                            <Binding Path="City" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                                <Binding.ValidationRules>
                                    <val:DescriptionStringValidation ValidatesOnTargetUpdated="True"  ValidationStep="RawProposedValue"></val:DescriptionStringValidation>
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.SelectedItem>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>

                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                                    <TextBlock Grid.Column="0" Grid.Row="1" Text="{ns:Loc ThisFieldIsRequired}" Foreground="Red"/>
                                </Grid>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </ComboBox>


                    <TextBox Style="{DynamicResource tb}" x:Name="DescriptionTB" Grid.Row="6" Margin="4,22,0,-29" Grid.ColumnSpan="2" TextWrapping="Wrap">
                        <TextBox.Text>
                            <Binding Path="Description" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <val:DescriptionStringValidation ValidatesOnTargetUpdated="True" ValidationStep="RawProposedValue"></val:DescriptionStringValidation>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>

                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                                    <TextBlock Grid.Column="0" Grid.Row="1" Text="{ns:Loc ThisFieldIsRequired}" Foreground="Red"/>
                                </Grid>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>



                    <ComboBox Style="{DynamicResource ComboBoxStyle}" x:Name="ComboBoxCountry" ItemsSource="{Binding Countries}"  IsTextSearchEnabled="True" IsTextSearchCaseSensitive="False" Grid.Row="3" Grid.Column="1" Margin="0,9,0,12" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding EnableCityCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ComboBox.SelectedItem>
                            <Binding Path="Country" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                                <Binding.ValidationRules>
                                    <val:DescriptionStringValidation ValidatesOnTargetUpdated="True"  ValidationStep="RawProposedValue"></val:DescriptionStringValidation>
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.SelectedItem>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>

                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                                    <TextBlock Grid.Column="0" Grid.Row="1" Text="{ns:Loc ThisFieldIsRequired}" Foreground="Red"/>
                                </Grid>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </ComboBox>
                    <TextBox VerticalContentAlignment="Center" Style="{DynamicResource tb}" HorizontalAlignment="Center" Grid.Row="5" TextWrapping="Wrap" Text="{Binding LanguageT}" VerticalAlignment="Center" Width="186" Height="29" Grid.Column="1"/>
                </Grid>



                <Grid Grid.Column="3" Grid.Row="0" Grid.RowSpan="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="5*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>

                    </Grid.RowDefinitions>

                    <!--CHECKPOINTS-->
                    <DataGrid HeadersVisibility="Column" ColumnHeaderStyle="{DynamicResource CenterGridHeaderStyle}" Grid.Row="0" Grid.RowSpan="2" x:Name="PointsGrid"  SelectedItem="{Binding SelectedCheckPoint}" ItemsSource="{Binding Path=TourPoints,UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource  Tables}"  HorizontalAlignment="Center" Margin="0,10,0,0">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="{ns:Loc CheckpointName}" Binding="{Binding Name}" Width="1*" >
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button Grid.Column="1" Grid.Row="1" Height="25" Width="60" Command="{Binding AddCheckPointCommand}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="29,34,0,0" Style="{DynamicResource  Button}" Grid.ColumnSpan="2" Content="{ns:Loc ADDBUTTON}"/>
                    <Button Grid.Column="2" Grid.Row="1" Height="25" Width="60"  Command="{Binding DeleteCheckPointCommand}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="112,34,0,0" Style="{DynamicResource  Button}" Content="{ns:Loc DELETE}"/>
                    <TextBox Style="{DynamicResource tb}" Grid.Column="1" Grid.Row="0" x:Name="CheckPointName" Height="47" VerticalAlignment="Top"  Margin="29,34,0,0" Grid.RowSpan="2" Grid.ColumnSpan="2"  >
                        <TextBox.Text>
                            <Binding Path="NameT" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <val:CheckPointNameValidationRule  ValidationStep="RawProposedValue"></val:CheckPointNameValidationRule>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>

                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                                    <TextBlock Grid.Column="0" Grid.Row="1" Text="{ns:Loc EnterPointName}" Foreground="Red"/>
                                </Grid>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>
                    <Label Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="0" Content="{ns:Loc AddCheckpoints}" Style="{DynamicResource  Label}" VerticalAlignment="Top" Height="30" HorizontalAlignment="Left" Width="160" Margin="24,4,0,0" />


                    <!--DATEANDTIME-->
                    <ListBox x:Name="DateTimeBox" ItemsSource="{Binding Path=Instances}" Grid.Column="0" Grid.Row="2" Grid.RowSpan="3" SelectedItem="{Binding selectedInstance}" Style="{DynamicResource  ListBoxForm}" Grid.ColumnSpan="2" Margin="0,38,35,4"/>
                    <tk:TimePicker TextAlignment="Left" Style="{DynamicResource dt}"  FontSize="9" x:Name="DT" Grid.Column="1"  Grid.Row="5" Text="{Binding Path=InstanceStartDate,Mode=TwoWay}" Format="LongTime" DataContext="{Binding}" Margin="28,0,0,45" Grid.ColumnSpan="2" />
                    <Button Grid.Column="1" Grid.Row="5" Command="{Binding AddDateTimeCommand}"   Height="25" Width="60" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="28,0,0,-2" Style="{DynamicResource  Button}" Grid.ColumnSpan="2" RenderTransformOrigin="0.47,0.449" Content="{ns:Loc ADDBUTTON}"/>
                    <Button Grid.Column="2" Grid.Row="5"   Height="25" Width="60" Command="{Binding DeleteDateTimeCommand}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,1,-2" Style="{DynamicResource  Button}" Content="{ns:Loc DELETE}"/>
                    <Label Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Center" Content="{ns:Loc AddDateAndTime}" Width="165" Height="40"  Grid.Row="2" VerticalAlignment="Center"  Style="{DynamicResource  Label}"/>
                    <Label Grid.Column="2" Content="Cant't select time from past!" Visibility="{Binding IsErrorMessageVisible}" FontSize="13" Foreground="REd" HorizontalAlignment="Center" Grid.Row="4" VerticalAlignment="Top" Width="175"/>
                    <Calendar Grid.Column="1" SelectedDate="{Binding Date}" DisplayDateStart="{Binding Start}" Style="{DynamicResource Calendar}" HorizontalAlignment="Left" Margin="10,44,0,0" Grid.Row="2" VerticalAlignment="Top" Height="172" Grid.RowSpan="3" Width="211" Grid.ColumnSpan="2"/>
                    <TextBox x:Name="DatesList" HorizontalAlignment="Left" Margin="0,72,0,0" Grid.Row="4" TextWrapping="Wrap" Height="0" Background="Transparent" Foreground="Transparent" BorderThickness="0" VerticalAlignment="Top" Width="120">
                        <TextBox.Text>
                            <Binding Path="DatesCount" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                                <Binding.ValidationRules>
                                    <val:DatesCountValidationRule ValidatesOnTargetUpdated="True" ValidationStep="RawProposedValue"></val:DatesCountValidationRule>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>

                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                                    <TextBlock Grid.Column="0" Grid.Row="1" Text="{ns:Loc AtLeast1DateIsRequired}" Foreground="Red"/>
                                </Grid>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </TextBox>

                </Grid>





                <!--TOUR_CONFIRM_CANCEL-->

                <Button Grid.Column="3" Grid.Row="4" Width="160" x:Name="AddNewTour"  Command="{Binding ConfirmCommand}" HorizontalAlignment="Left" Margin="92,37,0,21" Content="{ns:Loc CONFIRM}" >
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="IsEnabled" Value="True" />
                            <Setter Property="Background" Value="LightBlue"/>
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="BorderBrush" Value="{StaticResource RoyalBlue}"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontFamily" Value="Yu Gothic"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}" BorderThickness="2" BorderBrush="{StaticResource RoyalBlue}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>

                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{StaticResource HorizontalTable}" />

                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Background" Value="AliceBlue"></Setter>
                                                <Setter Property="BorderBrush" Value="LightGray" ></Setter>
                                                <Setter Property="Foreground" Value="LightGray"></Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="IsEnabled" Value="false" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=TourNameTB, Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=MaxGuestsTB, Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=DurationTB, Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=ComboBoxCountry, Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=ComboBoxCity, Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=DescriptionTB, Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=imagePicture, Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=CP, Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=DatesList, Path=(Validation.HasError)}" Value="false" />

                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="true" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Grid.Column="3" Grid.ColumnSpan="2" Grid.Row="4" Width="160" x:Name="Cancel" Command="NavigationCommands.BrowseBack" HorizontalAlignment="Left" Margin="283,37,0,21"  Content="{ns:Loc CANCELBUTTON}">
                    <Button.Style >
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="LightBlue"/>
                            <Setter Property="Background" Value="LightBlue"/>
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="BorderBrush" Value="{StaticResource RoyalBlue}"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontFamily" Value="Yu Gothic"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}" BorderThickness="2" BorderBrush="{StaticResource RoyalBlue}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>

                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{StaticResource HorizontalTable}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>


                <!--IMAGE-->
                <Grid Grid.Column="1" Grid.Row="3" Grid.RowSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1.5*"/>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="1.5*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="7*"/>
                    </Grid.RowDefinitions>


                    <Image x:Name="imagePicture" Grid.Row="2" Grid.ColumnSpan="4"  Grid.Column="1" Stretch="Fill" Margin="26,11,23,13">
                        <Image.Source>
                            <Binding Path="Image" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                                <Binding.ValidationRules>
                                    <val:ImageValidation ValidatesOnTargetUpdated="True"  ValidationStep="RawProposedValue"></val:ImageValidation>
                                </Binding.ValidationRules>
                            </Binding>
                        </Image.Source>
                        <Validation.ErrorTemplate>
                            <ControlTemplate>
                                <Grid  Grid.Column="0" Grid.Row="0" Margin="29,17,23,7">

                                    <AdornedElementPlaceholder  x:Name="textBox"/>
                                    <TextBlock Margin="-65,-7,0,0" Text="{ns:Loc AtLeast1ImageIsRequired}" Foreground="Red"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter  Property="Cursor" Value="Hand" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Validation.ErrorTemplate>
                    </Image>
                    <Button Grid.Column="4" Grid.Row="2" VerticalAlignment="Top" Command="{Binding NextImageCommand}" Height="50" Content="" Margin="104,55,-11,0" Grid.ColumnSpan="2" RenderTransformOrigin="0.693,0.528" >
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Grid>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Width="30" Height="14" Style="{DynamicResource Rectangle1}"/>
                                        <Polygon Points= "0,15 15,22 0,30" Style="{DynamicResource Polygon1}" Height="45" Width="35" />
                                    </StackPanel>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter  Property="Cursor" Value="Hand" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button Content="BACK" Grid.Row="2" Height="50" VerticalAlignment="Top" Command="{Binding PreviousImageCommand}" Margin="25,104,42,0" Grid.Column="1">
                        <Button.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="180"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Button.RenderTransform>
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Grid>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Width="30" Height="14" Style="{DynamicResource Rectangle1}"/>
                                        <Polygon Points= "0,15 15,22 0,30" Style="{DynamicResource Polygon1}" Height="45" Width="30" />
                                    </StackPanel>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter  Property="Cursor" Value="Hand" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Label Content="{ns:Loc ImagesOfTour}" Style="{DynamicResource Label}" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top" Height="36" Width="138" RenderTransformOrigin="0.505,0.781" Grid.RowSpan="2" Grid.Row="1"/>
                    <Button Command="{Binding AddImageCommand}" Height="24" Width="60"  Grid.Column="2" Grid.ColumnSpan="3" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="25,6,0,0" Grid.RowSpan="2" Style="{DynamicResource  Button}" Grid.Row="1" Content="{ns:Loc ADDBUTTON}"/>
                    <Button Content="{ns:Loc DELETE}" HorizontalAlignment="Left" Grid.Column="4" Grid.ColumnSpan="2" VerticalAlignment="Top"  Command="{Binding RemoveImageCommand}" Margin="104,6,0,0" Width="59" Height="24" Grid.RowSpan="2" Style="{DynamicResource  Button}" Grid.Row="1"/>
                </Grid>







                <Rectangle Style="{DynamicResource  Rectangle}" Height="500"  Margin="38,26,37,0" Grid.Column="2" Grid.RowSpan="5"/>
                <Label Grid.Column="4" Content="📌" Style="{DynamicResource Label}" FontSize="25" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.511,0.09" Height="48"/>
                <Label Grid.Column="4" Content="📆" Style="{DynamicResource Label}" FontSize="25" HorizontalAlignment="Left" Margin="12,112,0,0" Grid.Row="1" VerticalAlignment="Top" RenderTransformOrigin="0.217,-0.018" Grid.RowSpan="2"/>
                <Label Grid.Column="4" Content="🕘" Style="{DynamicResource Label}" FontSize="25" HorizontalAlignment="Left" Grid.Row="3" VerticalAlignment="Center" Margin="12,0,0,0"/>
                <Label Grid.Column="3" Content="{Binding PastError}" Foreground="Red" Visibility="{Binding DateMessage}" HorizontalAlignment="Left" Margin="200,57,0,0" Grid.Row="3" VerticalAlignment="Top"/>
                <TextBox x:Name="CP" Grid.Column="2" HorizontalAlignment="Left" Margin="76,0,0,70" Grid.Row="1" TextWrapping="Wrap" BorderThickness="0" Height="0"  VerticalAlignment="Bottom" Width="120" Background="Transparent" BorderBrush="Transparent" Foreground="Transparent" Grid.ColumnSpan="2">
                    <TextBox.Text>
                        <Binding Path="ListCount" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                            <Binding.ValidationRules>
                                <val:CheckPointCountValidationRule ValidatesOnTargetUpdated="True" ValidationStep="RawProposedValue"></val:CheckPointCountValidationRule>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>

                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <AdornedElementPlaceholder Grid.Column="0" Grid.Row="0" x:Name="textBox"/>
                                <TextBlock Grid.Column="0" Grid.Row="1" Text="{ns:Loc AtLeast2CheckpointsAreRequired}" Foreground="Red"/>
                            </Grid>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>
                </TextBox>


            </Grid>
        </Border>
        <!--TOAST_MESSAGE-->
        <StackPanel x:Name="Toast" HorizontalAlignment="Left"  Margin="700,458,0,0" VerticalAlignment="Top" Visibility="{Binding Toast}" Grid.Column="1" Grid.Row="1" Style="{DynamicResource  Toast}" Grid.ColumnSpan="2" Grid.RowSpan="2">
            <Label Style="{DynamicResource LabelToast}" Content="{ns:Loc TOURCREATED}"/>
            <Button Style="{DynamicResource ButtonToast}" Command="NavigationCommands.BrowseBack" Content="OK"/>
        </StackPanel>
        <StackPanel x:Name="ToastCant" HorizontalAlignment="Left"  Margin="700,458,0,0" VerticalAlignment="Top" Visibility="{Binding IsErrorMessageVisible}" Grid.Column="1" Grid.Row="1" Style="{DynamicResource  Toast}" Grid.ColumnSpan="2" Grid.RowSpan="2">
            <Label Style="{DynamicResource  LabelToast}" Content="{ns:Loc GUIDEALREADYHASTOUR}">
            </Label>
            <Button Style="{DynamicResource  ButtonToast}" Command="{Binding CloceToastAvailability}" Content="OK"/>
        </StackPanel>
    </Grid>
</Page>
